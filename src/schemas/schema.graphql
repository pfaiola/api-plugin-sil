type ShopHours {
    "Identifier"
    id: String

    "Day of Week"
    day: Int

    "Start time"
    start: String

    "End time"
    end: String
}

extend type Shop {
    "The Shop Number"
    shopNo: String

    "The Shop Hours"
    shopHours: [ShopHours]

    "The Shop Type"
    shopType: String
}

extend type Query {

    "Gets all shops of type Store"
    storefronts (
       "Shop IDs to filter by"
        shopIds: [ID],
        "Return only results that come after this cursor. Use this with `first` to specify the number of results to return."
        after: ConnectionCursor,
        "Return only results that come before this cursor. Use this with `last` to specify the number of results to return."
        before: ConnectionCursor,
        "Return at most this many results. This parameter may be used with either `after` or `offset` parameters."
        first: ConnectionLimitInt,
        "Return at most this many results. This parameter may be used with the `before` parameter."
        last: ConnectionLimitInt,
        "Return only results that come after the Nth result. This parameter may be used with the `first` parameter."
        offset: Int,
        "Return results sorted in this order"
        sortOrder: SortOrder = asc,
        "By default, groups are sorted by when they were created, oldest first. Set this to sort by one of the other allowed fields"
        sortBy: GroupSortByField = createdAt
    ): ShopConnection
}